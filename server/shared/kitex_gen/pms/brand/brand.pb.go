// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.3
// source: brand.proto

package brand

import (
	context "context"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BaseBrand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`                                // 品牌名称
	FirstLetter         string `protobuf:"bytes,3,opt,name=FirstLetter,proto3" json:"FirstLetter,omitempty"`                  // 首字母
	Sort                int64  `protobuf:"varint,4,opt,name=Sort,proto3" json:"Sort,omitempty"`                               // 排序
	FactoryStatus       int64  `protobuf:"varint,5,opt,name=FactoryStatus,proto3" json:"FactoryStatus,omitempty"`             // 是否为品牌制造商：0->不是；1->是
	ShowStatus          int64  `protobuf:"varint,6,opt,name=ShowStatus,proto3" json:"ShowStatus,omitempty"`                   // 订单编号
	ProductCount        int64  `protobuf:"varint,7,opt,name=ProductCount,proto3" json:"ProductCount,omitempty"`               // 产品数量
	ProductCommentCount int64  `protobuf:"varint,8,opt,name=ProductCommentCount,proto3" json:"ProductCommentCount,omitempty"` // 产品评论数量
	Logo                string `protobuf:"bytes,9,opt,name=Logo,proto3" json:"Logo,omitempty"`                                // 品牌logo
	BigPic              string `protobuf:"bytes,10,opt,name=BigPic,proto3" json:"BigPic,omitempty"`                           // 专区大图
	BrandStory          string `protobuf:"bytes,11,opt,name=BrandStory,proto3" json:"BrandStory,omitempty"`                   // 品牌故事
}

func (x *BaseBrand) Reset() {
	*x = BaseBrand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brand_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseBrand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseBrand) ProtoMessage() {}

func (x *BaseBrand) ProtoReflect() protoreflect.Message {
	mi := &file_brand_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseBrand.ProtoReflect.Descriptor instead.
func (*BaseBrand) Descriptor() ([]byte, []int) {
	return file_brand_proto_rawDescGZIP(), []int{0}
}

func (x *BaseBrand) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BaseBrand) GetFirstLetter() string {
	if x != nil {
		return x.FirstLetter
	}
	return ""
}

func (x *BaseBrand) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *BaseBrand) GetFactoryStatus() int64 {
	if x != nil {
		return x.FactoryStatus
	}
	return 0
}

func (x *BaseBrand) GetShowStatus() int64 {
	if x != nil {
		return x.ShowStatus
	}
	return 0
}

func (x *BaseBrand) GetProductCount() int64 {
	if x != nil {
		return x.ProductCount
	}
	return 0
}

func (x *BaseBrand) GetProductCommentCount() int64 {
	if x != nil {
		return x.ProductCommentCount
	}
	return 0
}

func (x *BaseBrand) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *BaseBrand) GetBigPic() string {
	if x != nil {
		return x.BigPic
	}
	return ""
}

func (x *BaseBrand) GetBrandStory() string {
	if x != nil {
		return x.BrandStory
	}
	return ""
}

type BrandAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Brand *BaseBrand `protobuf:"bytes,1,opt,name=Brand,proto3" json:"Brand,omitempty"`
}

func (x *BrandAddReq) Reset() {
	*x = BrandAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brand_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandAddReq) ProtoMessage() {}

func (x *BrandAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_brand_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandAddReq.ProtoReflect.Descriptor instead.
func (*BrandAddReq) Descriptor() ([]byte, []int) {
	return file_brand_proto_rawDescGZIP(), []int{1}
}

func (x *BrandAddReq) GetBrand() *BaseBrand {
	if x != nil {
		return x.Brand
	}
	return nil
}

type BrandAddResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *BrandAddResp) Reset() {
	*x = BrandAddResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brand_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandAddResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandAddResp) ProtoMessage() {}

func (x *BrandAddResp) ProtoReflect() protoreflect.Message {
	mi := &file_brand_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandAddResp.ProtoReflect.Descriptor instead.
func (*BrandAddResp) Descriptor() ([]byte, []int) {
	return file_brand_proto_rawDescGZIP(), []int{2}
}

func (x *BrandAddResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

// 获取品牌列表
type BrandListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current       int64  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize      int64  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Name          string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`                    // 品牌名称
	FactoryStatus int64  `protobuf:"varint,4,opt,name=FactoryStatus,proto3" json:"FactoryStatus,omitempty"` // 是否为品牌制造商：0->不是；1->是
	ShowStatus    int64  `protobuf:"varint,5,opt,name=ShowStatus,proto3" json:"ShowStatus,omitempty"`       // 订单编号
}

func (x *BrandListReq) Reset() {
	*x = BrandListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brand_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandListReq) ProtoMessage() {}

func (x *BrandListReq) ProtoReflect() protoreflect.Message {
	mi := &file_brand_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandListReq.ProtoReflect.Descriptor instead.
func (*BrandListReq) Descriptor() ([]byte, []int) {
	return file_brand_proto_rawDescGZIP(), []int{3}
}

func (x *BrandListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *BrandListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *BrandListReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BrandListReq) GetFactoryStatus() int64 {
	if x != nil {
		return x.FactoryStatus
	}
	return 0
}

func (x *BrandListReq) GetShowStatus() int64 {
	if x != nil {
		return x.ShowStatus
	}
	return 0
}

type BrandListByIdsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *BrandListByIdsReq) Reset() {
	*x = BrandListByIdsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brand_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandListByIdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandListByIdsReq) ProtoMessage() {}

func (x *BrandListByIdsReq) ProtoReflect() protoreflect.Message {
	mi := &file_brand_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandListByIdsReq.ProtoReflect.Descriptor instead.
func (*BrandListByIdsReq) Descriptor() ([]byte, []int) {
	return file_brand_proto_rawDescGZIP(), []int{4}
}

func (x *BrandListByIdsReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type BrandListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64        `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*BaseBrand `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *BrandListResp) Reset() {
	*x = BrandListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brand_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandListResp) ProtoMessage() {}

func (x *BrandListResp) ProtoReflect() protoreflect.Message {
	mi := &file_brand_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandListResp.ProtoReflect.Descriptor instead.
func (*BrandListResp) Descriptor() ([]byte, []int) {
	return file_brand_proto_rawDescGZIP(), []int{5}
}

func (x *BrandListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *BrandListResp) GetList() []*BaseBrand {
	if x != nil {
		return x.List
	}
	return nil
}

type BrandUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Brand *BaseBrand `protobuf:"bytes,1,opt,name=Brand,proto3" json:"Brand,omitempty"`
}

func (x *BrandUpdateReq) Reset() {
	*x = BrandUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brand_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandUpdateReq) ProtoMessage() {}

func (x *BrandUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_brand_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandUpdateReq.ProtoReflect.Descriptor instead.
func (*BrandUpdateReq) Descriptor() ([]byte, []int) {
	return file_brand_proto_rawDescGZIP(), []int{6}
}

func (x *BrandUpdateReq) GetBrand() *BaseBrand {
	if x != nil {
		return x.Brand
	}
	return nil
}

type BrandUpdateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *BrandUpdateResp) Reset() {
	*x = BrandUpdateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brand_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandUpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandUpdateResp) ProtoMessage() {}

func (x *BrandUpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_brand_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandUpdateResp.ProtoReflect.Descriptor instead.
func (*BrandUpdateResp) Descriptor() ([]byte, []int) {
	return file_brand_proto_rawDescGZIP(), []int{7}
}

func (x *BrandUpdateResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type BrandDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *BrandDeleteReq) Reset() {
	*x = BrandDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brand_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandDeleteReq) ProtoMessage() {}

func (x *BrandDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_brand_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandDeleteReq.ProtoReflect.Descriptor instead.
func (*BrandDeleteReq) Descriptor() ([]byte, []int) {
	return file_brand_proto_rawDescGZIP(), []int{8}
}

func (x *BrandDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type BrandDeleteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *BrandDeleteResp) Reset() {
	*x = BrandDeleteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_brand_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandDeleteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandDeleteResp) ProtoMessage() {}

func (x *BrandDeleteResp) ProtoReflect() protoreflect.Message {
	mi := &file_brand_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandDeleteResp.ProtoReflect.Descriptor instead.
func (*BrandDeleteResp) Descriptor() ([]byte, []int) {
	return file_brand_proto_rawDescGZIP(), []int{9}
}

func (x *BrandDeleteResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

var File_brand_proto protoreflect.FileDescriptor

var file_brand_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x70,
	0x6d, 0x73, 0x22, 0xbd, 0x02, 0x0a, 0x09, 0x42, 0x61, 0x73, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4c, 0x65, 0x74,
	0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x46, 0x69, 0x72, 0x73, 0x74,
	0x4c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x46, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x68, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x53, 0x68, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x22, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x13, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x6f, 0x67, 0x6f, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x69,
	0x67, 0x50, 0x69, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x42, 0x69, 0x67, 0x50,
	0x69, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x79,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x6f,
	0x72, 0x79, 0x22, 0x33, 0x0a, 0x0b, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x24, 0x0a, 0x05, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64,
	0x52, 0x05, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x22, 0x22, 0x0a, 0x0c, 0x42, 0x72, 0x61, 0x6e, 0x64,
	0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x9e, 0x01, 0x0a, 0x0c,
	0x42, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x46,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x53, 0x68, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x53, 0x68, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x25, 0x0a, 0x11,
	0x42, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03,
	0x69, 0x64, 0x73, 0x22, 0x49, 0x0a, 0x0d, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x22, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x36,
	0x0a, 0x0e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x24, 0x0a, 0x05, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52,
	0x05, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x22, 0x25, 0x0a, 0x0f, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x22, 0x0a,
	0x0e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64,
	0x73, 0x22, 0x25, 0x0a, 0x0f, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x32, 0xa5, 0x02, 0x0a, 0x0c, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x41, 0x64, 0x64, 0x12, 0x10, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x42, 0x72, 0x61, 0x6e,
	0x64, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x09, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x11, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x6d, 0x73,
	0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c,
	0x0a, 0x0e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x49, 0x64, 0x73,
	0x12, 0x16, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x42,
	0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x0b,
	0x42, 0x72, 0x61, 0x6e, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x70, 0x6d,
	0x73, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x14, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x0b, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x42, 0x72, 0x61, 0x6e,
	0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x6d, 0x73,
	0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79,
	0x75, 0x61, 0x6e, 0x79, 0x70, 0x38, 0x2f, 0x77, 0x78, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63,
	0x65, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x6b, 0x69, 0x74, 0x65, 0x78, 0x5f, 0x67,
	0x65, 0x6e, 0x2f, 0x70, 0x6d, 0x73, 0x2f, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_brand_proto_rawDescOnce sync.Once
	file_brand_proto_rawDescData = file_brand_proto_rawDesc
)

func file_brand_proto_rawDescGZIP() []byte {
	file_brand_proto_rawDescOnce.Do(func() {
		file_brand_proto_rawDescData = protoimpl.X.CompressGZIP(file_brand_proto_rawDescData)
	})
	return file_brand_proto_rawDescData
}

var file_brand_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_brand_proto_goTypes = []interface{}{
	(*BaseBrand)(nil),         // 0: pms.BaseBrand
	(*BrandAddReq)(nil),       // 1: pms.BrandAddReq
	(*BrandAddResp)(nil),      // 2: pms.BrandAddResp
	(*BrandListReq)(nil),      // 3: pms.BrandListReq
	(*BrandListByIdsReq)(nil), // 4: pms.BrandListByIdsReq
	(*BrandListResp)(nil),     // 5: pms.BrandListResp
	(*BrandUpdateReq)(nil),    // 6: pms.BrandUpdateReq
	(*BrandUpdateResp)(nil),   // 7: pms.BrandUpdateResp
	(*BrandDeleteReq)(nil),    // 8: pms.BrandDeleteReq
	(*BrandDeleteResp)(nil),   // 9: pms.BrandDeleteResp
}
var file_brand_proto_depIdxs = []int32{
	0, // 0: pms.BrandAddReq.Brand:type_name -> pms.BaseBrand
	0, // 1: pms.BrandListResp.list:type_name -> pms.BaseBrand
	0, // 2: pms.BrandUpdateReq.Brand:type_name -> pms.BaseBrand
	1, // 3: pms.BrandService.BrandAdd:input_type -> pms.BrandAddReq
	3, // 4: pms.BrandService.BrandList:input_type -> pms.BrandListReq
	4, // 5: pms.BrandService.BrandListByIds:input_type -> pms.BrandListByIdsReq
	6, // 6: pms.BrandService.BrandUpdate:input_type -> pms.BrandUpdateReq
	8, // 7: pms.BrandService.BrandDelete:input_type -> pms.BrandDeleteReq
	2, // 8: pms.BrandService.BrandAdd:output_type -> pms.BrandAddResp
	5, // 9: pms.BrandService.BrandList:output_type -> pms.BrandListResp
	5, // 10: pms.BrandService.BrandListByIds:output_type -> pms.BrandListResp
	7, // 11: pms.BrandService.BrandUpdate:output_type -> pms.BrandUpdateResp
	9, // 12: pms.BrandService.BrandDelete:output_type -> pms.BrandDeleteResp
	8, // [8:13] is the sub-list for method output_type
	3, // [3:8] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_brand_proto_init() }
func file_brand_proto_init() {
	if File_brand_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_brand_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseBrand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brand_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brand_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandAddResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brand_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brand_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandListByIdsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brand_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brand_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brand_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandUpdateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brand_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_brand_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandDeleteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_brand_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_brand_proto_goTypes,
		DependencyIndexes: file_brand_proto_depIdxs,
		MessageInfos:      file_brand_proto_msgTypes,
	}.Build()
	File_brand_proto = out.File
	file_brand_proto_rawDesc = nil
	file_brand_proto_goTypes = nil
	file_brand_proto_depIdxs = nil
}

var _ context.Context

// Code generated by Kitex v0.9.0. DO NOT EDIT.

type BrandService interface {
	BrandAdd(ctx context.Context, req *BrandAddReq) (res *BrandAddResp, err error)
	BrandList(ctx context.Context, req *BrandListReq) (res *BrandListResp, err error)
	BrandListByIds(ctx context.Context, req *BrandListByIdsReq) (res *BrandListResp, err error)
	BrandUpdate(ctx context.Context, req *BrandUpdateReq) (res *BrandUpdateResp, err error)
	BrandDelete(ctx context.Context, req *BrandDeleteReq) (res *BrandDeleteResp, err error)
}
