// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.3
// source: sku_stock.proto

package sku_stock

import (
	context "context"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BaseSkuStock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64   `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	ProductId      int64   `protobuf:"varint,2,opt,name=ProductId,proto3" json:"ProductId,omitempty"`
	SkuCode        string  `protobuf:"bytes,3,opt,name=SkuCode,proto3" json:"SkuCode,omitempty"` // sku编码
	Price          float32 `protobuf:"fixed32,4,opt,name=Price,proto3" json:"Price,omitempty"`
	Stock          int64   `protobuf:"varint,5,opt,name=Stock,proto3" json:"Stock,omitempty"`                    // 库存
	LowStock       int64   `protobuf:"varint,6,opt,name=LowStock,proto3" json:"LowStock,omitempty"`              // 预警库存
	Pic            string  `protobuf:"bytes,7,opt,name=Pic,proto3" json:"Pic,omitempty"`                         // 展示图片
	Sale           int64   `protobuf:"varint,8,opt,name=Sale,proto3" json:"Sale,omitempty"`                      // 销量
	PromotionPrice float32 `protobuf:"fixed32,9,opt,name=PromotionPrice,proto3" json:"PromotionPrice,omitempty"` // 单品促销价格
	LockStock      int64   `protobuf:"varint,10,opt,name=LockStock,proto3" json:"LockStock,omitempty"`           // 锁定库存
	SpData         string  `protobuf:"bytes,11,opt,name=SpData,proto3" json:"SpData,omitempty"`                  // 商品销售属性，json格式 e.g. {"key":"风格","value":"秋季"}
}

func (x *BaseSkuStock) Reset() {
	*x = BaseSkuStock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sku_stock_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseSkuStock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseSkuStock) ProtoMessage() {}

func (x *BaseSkuStock) ProtoReflect() protoreflect.Message {
	mi := &file_sku_stock_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseSkuStock.ProtoReflect.Descriptor instead.
func (*BaseSkuStock) Descriptor() ([]byte, []int) {
	return file_sku_stock_proto_rawDescGZIP(), []int{0}
}

func (x *BaseSkuStock) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BaseSkuStock) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *BaseSkuStock) GetSkuCode() string {
	if x != nil {
		return x.SkuCode
	}
	return ""
}

func (x *BaseSkuStock) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *BaseSkuStock) GetStock() int64 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *BaseSkuStock) GetLowStock() int64 {
	if x != nil {
		return x.LowStock
	}
	return 0
}

func (x *BaseSkuStock) GetPic() string {
	if x != nil {
		return x.Pic
	}
	return ""
}

func (x *BaseSkuStock) GetSale() int64 {
	if x != nil {
		return x.Sale
	}
	return 0
}

func (x *BaseSkuStock) GetPromotionPrice() float32 {
	if x != nil {
		return x.PromotionPrice
	}
	return 0
}

func (x *BaseSkuStock) GetLockStock() int64 {
	if x != nil {
		return x.LockStock
	}
	return 0
}

func (x *BaseSkuStock) GetSpData() string {
	if x != nil {
		return x.SpData
	}
	return ""
}

type SkuStockAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuStock *BaseSkuStock `protobuf:"bytes,1,opt,name=SkuStock,proto3" json:"SkuStock,omitempty"`
}

func (x *SkuStockAddReq) Reset() {
	*x = SkuStockAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sku_stock_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkuStockAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuStockAddReq) ProtoMessage() {}

func (x *SkuStockAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_sku_stock_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuStockAddReq.ProtoReflect.Descriptor instead.
func (*SkuStockAddReq) Descriptor() ([]byte, []int) {
	return file_sku_stock_proto_rawDescGZIP(), []int{1}
}

func (x *SkuStockAddReq) GetSkuStock() *BaseSkuStock {
	if x != nil {
		return x.SkuStock
	}
	return nil
}

type SkuStockAddResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *SkuStockAddResp) Reset() {
	*x = SkuStockAddResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sku_stock_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkuStockAddResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuStockAddResp) ProtoMessage() {}

func (x *SkuStockAddResp) ProtoReflect() protoreflect.Message {
	mi := &file_sku_stock_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuStockAddResp.ProtoReflect.Descriptor instead.
func (*SkuStockAddResp) Descriptor() ([]byte, []int) {
	return file_sku_stock_proto_rawDescGZIP(), []int{2}
}

func (x *SkuStockAddResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type SkuStockListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId int64 `protobuf:"varint,1,opt,name=ProductId,proto3" json:"ProductId,omitempty"`
}

func (x *SkuStockListReq) Reset() {
	*x = SkuStockListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sku_stock_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkuStockListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuStockListReq) ProtoMessage() {}

func (x *SkuStockListReq) ProtoReflect() protoreflect.Message {
	mi := &file_sku_stock_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuStockListReq.ProtoReflect.Descriptor instead.
func (*SkuStockListReq) Descriptor() ([]byte, []int) {
	return file_sku_stock_proto_rawDescGZIP(), []int{3}
}

func (x *SkuStockListReq) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

type SkuStockListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64           `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*BaseSkuStock `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *SkuStockListResp) Reset() {
	*x = SkuStockListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sku_stock_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkuStockListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuStockListResp) ProtoMessage() {}

func (x *SkuStockListResp) ProtoReflect() protoreflect.Message {
	mi := &file_sku_stock_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuStockListResp.ProtoReflect.Descriptor instead.
func (*SkuStockListResp) Descriptor() ([]byte, []int) {
	return file_sku_stock_proto_rawDescGZIP(), []int{4}
}

func (x *SkuStockListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SkuStockListResp) GetList() []*BaseSkuStock {
	if x != nil {
		return x.List
	}
	return nil
}

type SkuStockUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuStock *BaseSkuStock `protobuf:"bytes,1,opt,name=SkuStock,proto3" json:"SkuStock,omitempty"`
}

func (x *SkuStockUpdateReq) Reset() {
	*x = SkuStockUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sku_stock_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkuStockUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuStockUpdateReq) ProtoMessage() {}

func (x *SkuStockUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_sku_stock_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuStockUpdateReq.ProtoReflect.Descriptor instead.
func (*SkuStockUpdateReq) Descriptor() ([]byte, []int) {
	return file_sku_stock_proto_rawDescGZIP(), []int{5}
}

func (x *SkuStockUpdateReq) GetSkuStock() *BaseSkuStock {
	if x != nil {
		return x.SkuStock
	}
	return nil
}

type SkuStockUpdateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *SkuStockUpdateResp) Reset() {
	*x = SkuStockUpdateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sku_stock_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkuStockUpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuStockUpdateResp) ProtoMessage() {}

func (x *SkuStockUpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_sku_stock_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuStockUpdateResp.ProtoReflect.Descriptor instead.
func (*SkuStockUpdateResp) Descriptor() ([]byte, []int) {
	return file_sku_stock_proto_rawDescGZIP(), []int{6}
}

func (x *SkuStockUpdateResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type SkuStockDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *SkuStockDeleteReq) Reset() {
	*x = SkuStockDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sku_stock_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkuStockDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuStockDeleteReq) ProtoMessage() {}

func (x *SkuStockDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_sku_stock_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuStockDeleteReq.ProtoReflect.Descriptor instead.
func (*SkuStockDeleteReq) Descriptor() ([]byte, []int) {
	return file_sku_stock_proto_rawDescGZIP(), []int{7}
}

func (x *SkuStockDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type SkuStockDeleteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *SkuStockDeleteResp) Reset() {
	*x = SkuStockDeleteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sku_stock_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkuStockDeleteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuStockDeleteResp) ProtoMessage() {}

func (x *SkuStockDeleteResp) ProtoReflect() protoreflect.Message {
	mi := &file_sku_stock_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuStockDeleteResp.ProtoReflect.Descriptor instead.
func (*SkuStockDeleteResp) Descriptor() ([]byte, []int) {
	return file_sku_stock_proto_rawDescGZIP(), []int{8}
}

func (x *SkuStockDeleteResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type ReleaseSkuStockLockReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*ReleaseSkuStockLockData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ReleaseSkuStockLockReq) Reset() {
	*x = ReleaseSkuStockLockReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sku_stock_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseSkuStockLockReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseSkuStockLockReq) ProtoMessage() {}

func (x *ReleaseSkuStockLockReq) ProtoReflect() protoreflect.Message {
	mi := &file_sku_stock_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseSkuStockLockReq.ProtoReflect.Descriptor instead.
func (*ReleaseSkuStockLockReq) Descriptor() ([]byte, []int) {
	return file_sku_stock_proto_rawDescGZIP(), []int{9}
}

func (x *ReleaseSkuStockLockReq) GetData() []*ReleaseSkuStockLockData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ReleaseSkuStockLockData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductSkuId    int64 `protobuf:"varint,1,opt,name=ProductSkuId,proto3" json:"ProductSkuId,omitempty"`
	ProductQuantity int64 `protobuf:"varint,2,opt,name=ProductQuantity,proto3" json:"ProductQuantity,omitempty"`
}

func (x *ReleaseSkuStockLockData) Reset() {
	*x = ReleaseSkuStockLockData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sku_stock_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseSkuStockLockData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseSkuStockLockData) ProtoMessage() {}

func (x *ReleaseSkuStockLockData) ProtoReflect() protoreflect.Message {
	mi := &file_sku_stock_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseSkuStockLockData.ProtoReflect.Descriptor instead.
func (*ReleaseSkuStockLockData) Descriptor() ([]byte, []int) {
	return file_sku_stock_proto_rawDescGZIP(), []int{10}
}

func (x *ReleaseSkuStockLockData) GetProductSkuId() int64 {
	if x != nil {
		return x.ProductSkuId
	}
	return 0
}

func (x *ReleaseSkuStockLockData) GetProductQuantity() int64 {
	if x != nil {
		return x.ProductQuantity
	}
	return 0
}

type ReleaseSkuStockLockResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *ReleaseSkuStockLockResp) Reset() {
	*x = ReleaseSkuStockLockResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sku_stock_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseSkuStockLockResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseSkuStockLockResp) ProtoMessage() {}

func (x *ReleaseSkuStockLockResp) ProtoReflect() protoreflect.Message {
	mi := &file_sku_stock_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseSkuStockLockResp.ProtoReflect.Descriptor instead.
func (*ReleaseSkuStockLockResp) Descriptor() ([]byte, []int) {
	return file_sku_stock_proto_rawDescGZIP(), []int{11}
}

func (x *ReleaseSkuStockLockResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type LockSkuStockLockReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*LockSkuStockLockData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *LockSkuStockLockReq) Reset() {
	*x = LockSkuStockLockReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sku_stock_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockSkuStockLockReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockSkuStockLockReq) ProtoMessage() {}

func (x *LockSkuStockLockReq) ProtoReflect() protoreflect.Message {
	mi := &file_sku_stock_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockSkuStockLockReq.ProtoReflect.Descriptor instead.
func (*LockSkuStockLockReq) Descriptor() ([]byte, []int) {
	return file_sku_stock_proto_rawDescGZIP(), []int{12}
}

func (x *LockSkuStockLockReq) GetData() []*LockSkuStockLockData {
	if x != nil {
		return x.Data
	}
	return nil
}

type LockSkuStockLockData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductSkuId    int64 `protobuf:"varint,1,opt,name=ProductSkuId,proto3" json:"ProductSkuId,omitempty"`
	ProductQuantity int64 `protobuf:"varint,2,opt,name=ProductQuantity,proto3" json:"ProductQuantity,omitempty"`
}

func (x *LockSkuStockLockData) Reset() {
	*x = LockSkuStockLockData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sku_stock_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockSkuStockLockData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockSkuStockLockData) ProtoMessage() {}

func (x *LockSkuStockLockData) ProtoReflect() protoreflect.Message {
	mi := &file_sku_stock_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockSkuStockLockData.ProtoReflect.Descriptor instead.
func (*LockSkuStockLockData) Descriptor() ([]byte, []int) {
	return file_sku_stock_proto_rawDescGZIP(), []int{13}
}

func (x *LockSkuStockLockData) GetProductSkuId() int64 {
	if x != nil {
		return x.ProductSkuId
	}
	return 0
}

func (x *LockSkuStockLockData) GetProductQuantity() int64 {
	if x != nil {
		return x.ProductQuantity
	}
	return 0
}

type LockSkuStockLockResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *LockSkuStockLockResp) Reset() {
	*x = LockSkuStockLockResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sku_stock_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockSkuStockLockResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockSkuStockLockResp) ProtoMessage() {}

func (x *LockSkuStockLockResp) ProtoReflect() protoreflect.Message {
	mi := &file_sku_stock_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockSkuStockLockResp.ProtoReflect.Descriptor instead.
func (*LockSkuStockLockResp) Descriptor() ([]byte, []int) {
	return file_sku_stock_proto_rawDescGZIP(), []int{14}
}

func (x *LockSkuStockLockResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type QuerySkuStockByProductSkuIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductSkuId int64 `protobuf:"varint,1,opt,name=ProductSkuId,proto3" json:"ProductSkuId,omitempty"`
}

func (x *QuerySkuStockByProductSkuIdReq) Reset() {
	*x = QuerySkuStockByProductSkuIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sku_stock_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuerySkuStockByProductSkuIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySkuStockByProductSkuIdReq) ProtoMessage() {}

func (x *QuerySkuStockByProductSkuIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_sku_stock_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySkuStockByProductSkuIdReq.ProtoReflect.Descriptor instead.
func (*QuerySkuStockByProductSkuIdReq) Descriptor() ([]byte, []int) {
	return file_sku_stock_proto_rawDescGZIP(), []int{15}
}

func (x *QuerySkuStockByProductSkuIdReq) GetProductSkuId() int64 {
	if x != nil {
		return x.ProductSkuId
	}
	return 0
}

var File_sku_stock_proto protoreflect.FileDescriptor

var file_sku_stock_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x73, 0x6b, 0x75, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x03, 0x70, 0x6d, 0x73, 0x22, 0xa2, 0x02, 0x0a, 0x0c, 0x42, 0x61, 0x73, 0x65, 0x53,
	0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x6b, 0x75, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x6b, 0x75, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x4c,
	0x6f, 0x77, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4c,
	0x6f, 0x77, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x69, 0x63, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x50, 0x69, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x61, 0x6c,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x61, 0x6c, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x70, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x70, 0x44, 0x61, 0x74, 0x61, 0x22, 0x3f, 0x0a, 0x0e, 0x53,
	0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x12, 0x2d, 0x0a,
	0x08, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x52, 0x08, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x22, 0x25, 0x0a, 0x0f,
	0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x22, 0x2f, 0x0a, 0x0f, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x10, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x25,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70,
	0x6d, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x42, 0x0a, 0x11, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2d, 0x0a, 0x08, 0x53, 0x6b,
	0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70,
	0x6d, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52,
	0x08, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x22, 0x28, 0x0a, 0x12, 0x53, 0x6b, 0x75,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x22, 0x25, 0x0a, 0x11, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x28, 0x0a, 0x12, 0x53, 0x6b,
	0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x22, 0x4a, 0x0a, 0x16, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x53,
	0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x30,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70,
	0x6d, 0x73, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x4c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x67, 0x0a, 0x17, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x53, 0x6b, 0x75, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x4c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x49, 0x64, 0x12,
	0x28, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x2d, 0x0a, 0x17, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4c, 0x6f, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x44, 0x0a, 0x13, 0x4c, 0x6f, 0x63, 0x6b,
	0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12,
	0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x70, 0x6d, 0x73, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x4c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x64,
	0x0a, 0x14, 0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4c, 0x6f,
	0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x53, 0x6b, 0x75, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0f, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x51, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x22, 0x2a, 0x0a, 0x14, 0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x6b, 0x75, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67,
	0x22, 0x44, 0x0a, 0x1e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x53, 0x6b, 0x75, 0x49, 0x64, 0x32, 0x80, 0x04, 0x0a, 0x0f, 0x53, 0x6b, 0x75, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x53, 0x6b,
	0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x12, 0x13, 0x2e, 0x70, 0x6d, 0x73, 0x2e,
	0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x14,
	0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x41, 0x64, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x0c, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x53, 0x6b, 0x75, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x6d, 0x73,
	0x2e, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x41, 0x0a, 0x0e, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x6d,
	0x73, 0x2e, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x0e, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x53, 0x6b, 0x75,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x17,
	0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x13, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x1b,
	0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x53, 0x6b, 0x75, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x6d,
	0x73, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x10, 0x4c, 0x6f, 0x63,
	0x6b, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x18, 0x2e,
	0x70, 0x6d, 0x73, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x4c, 0x6f,
	0x63, 0x6b, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x55, 0x0a, 0x1b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x6b, 0x75, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x49,
	0x64, 0x12, 0x23, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x6b, 0x75,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x6b,
	0x75, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x42, 0x3e, 0x5a, 0x3c, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x75, 0x61, 0x6e, 0x79, 0x70, 0x38, 0x2f,
	0x77, 0x78, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63, 0x65, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x2f, 0x6b, 0x69, 0x74, 0x65, 0x78, 0x5f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x6d, 0x73, 0x2f,
	0x73, 0x6b, 0x75, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_sku_stock_proto_rawDescOnce sync.Once
	file_sku_stock_proto_rawDescData = file_sku_stock_proto_rawDesc
)

func file_sku_stock_proto_rawDescGZIP() []byte {
	file_sku_stock_proto_rawDescOnce.Do(func() {
		file_sku_stock_proto_rawDescData = protoimpl.X.CompressGZIP(file_sku_stock_proto_rawDescData)
	})
	return file_sku_stock_proto_rawDescData
}

var file_sku_stock_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_sku_stock_proto_goTypes = []interface{}{
	(*BaseSkuStock)(nil),                   // 0: pms.BaseSkuStock
	(*SkuStockAddReq)(nil),                 // 1: pms.SkuStockAddReq
	(*SkuStockAddResp)(nil),                // 2: pms.SkuStockAddResp
	(*SkuStockListReq)(nil),                // 3: pms.SkuStockListReq
	(*SkuStockListResp)(nil),               // 4: pms.SkuStockListResp
	(*SkuStockUpdateReq)(nil),              // 5: pms.SkuStockUpdateReq
	(*SkuStockUpdateResp)(nil),             // 6: pms.SkuStockUpdateResp
	(*SkuStockDeleteReq)(nil),              // 7: pms.SkuStockDeleteReq
	(*SkuStockDeleteResp)(nil),             // 8: pms.SkuStockDeleteResp
	(*ReleaseSkuStockLockReq)(nil),         // 9: pms.ReleaseSkuStockLockReq
	(*ReleaseSkuStockLockData)(nil),        // 10: pms.ReleaseSkuStockLockData
	(*ReleaseSkuStockLockResp)(nil),        // 11: pms.ReleaseSkuStockLockResp
	(*LockSkuStockLockReq)(nil),            // 12: pms.LockSkuStockLockReq
	(*LockSkuStockLockData)(nil),           // 13: pms.LockSkuStockLockData
	(*LockSkuStockLockResp)(nil),           // 14: pms.LockSkuStockLockResp
	(*QuerySkuStockByProductSkuIdReq)(nil), // 15: pms.QuerySkuStockByProductSkuIdReq
}
var file_sku_stock_proto_depIdxs = []int32{
	0,  // 0: pms.SkuStockAddReq.SkuStock:type_name -> pms.BaseSkuStock
	0,  // 1: pms.SkuStockListResp.list:type_name -> pms.BaseSkuStock
	0,  // 2: pms.SkuStockUpdateReq.SkuStock:type_name -> pms.BaseSkuStock
	10, // 3: pms.ReleaseSkuStockLockReq.data:type_name -> pms.ReleaseSkuStockLockData
	13, // 4: pms.LockSkuStockLockReq.data:type_name -> pms.LockSkuStockLockData
	1,  // 5: pms.SkuStockService.SkuStockAdd:input_type -> pms.SkuStockAddReq
	3,  // 6: pms.SkuStockService.SkuStockList:input_type -> pms.SkuStockListReq
	5,  // 7: pms.SkuStockService.SkuStockUpdate:input_type -> pms.SkuStockUpdateReq
	7,  // 8: pms.SkuStockService.SkuStockDelete:input_type -> pms.SkuStockDeleteReq
	9,  // 9: pms.SkuStockService.ReleaseSkuStockLock:input_type -> pms.ReleaseSkuStockLockReq
	12, // 10: pms.SkuStockService.LockSkuStockLock:input_type -> pms.LockSkuStockLockReq
	15, // 11: pms.SkuStockService.QuerySkuStockByProductSkuId:input_type -> pms.QuerySkuStockByProductSkuIdReq
	2,  // 12: pms.SkuStockService.SkuStockAdd:output_type -> pms.SkuStockAddResp
	4,  // 13: pms.SkuStockService.SkuStockList:output_type -> pms.SkuStockListResp
	6,  // 14: pms.SkuStockService.SkuStockUpdate:output_type -> pms.SkuStockUpdateResp
	8,  // 15: pms.SkuStockService.SkuStockDelete:output_type -> pms.SkuStockDeleteResp
	11, // 16: pms.SkuStockService.ReleaseSkuStockLock:output_type -> pms.ReleaseSkuStockLockResp
	14, // 17: pms.SkuStockService.LockSkuStockLock:output_type -> pms.LockSkuStockLockResp
	0,  // 18: pms.SkuStockService.QuerySkuStockByProductSkuId:output_type -> pms.BaseSkuStock
	12, // [12:19] is the sub-list for method output_type
	5,  // [5:12] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_sku_stock_proto_init() }
func file_sku_stock_proto_init() {
	if File_sku_stock_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sku_stock_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseSkuStock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sku_stock_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkuStockAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sku_stock_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkuStockAddResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sku_stock_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkuStockListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sku_stock_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkuStockListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sku_stock_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkuStockUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sku_stock_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkuStockUpdateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sku_stock_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkuStockDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sku_stock_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkuStockDeleteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sku_stock_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseSkuStockLockReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sku_stock_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseSkuStockLockData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sku_stock_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseSkuStockLockResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sku_stock_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockSkuStockLockReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sku_stock_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockSkuStockLockData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sku_stock_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockSkuStockLockResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sku_stock_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuerySkuStockByProductSkuIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sku_stock_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sku_stock_proto_goTypes,
		DependencyIndexes: file_sku_stock_proto_depIdxs,
		MessageInfos:      file_sku_stock_proto_msgTypes,
	}.Build()
	File_sku_stock_proto = out.File
	file_sku_stock_proto_rawDesc = nil
	file_sku_stock_proto_goTypes = nil
	file_sku_stock_proto_depIdxs = nil
}

var _ context.Context

// Code generated by Kitex v0.9.0. DO NOT EDIT.

type SkuStockService interface {
	SkuStockAdd(ctx context.Context, req *SkuStockAddReq) (res *SkuStockAddResp, err error)
	SkuStockList(ctx context.Context, req *SkuStockListReq) (res *SkuStockListResp, err error)
	SkuStockUpdate(ctx context.Context, req *SkuStockUpdateReq) (res *SkuStockUpdateResp, err error)
	SkuStockDelete(ctx context.Context, req *SkuStockDeleteReq) (res *SkuStockDeleteResp, err error)
	ReleaseSkuStockLock(ctx context.Context, req *ReleaseSkuStockLockReq) (res *ReleaseSkuStockLockResp, err error)
	LockSkuStockLock(ctx context.Context, req *LockSkuStockLockReq) (res *LockSkuStockLockResp, err error)
	QuerySkuStockByProductSkuId(ctx context.Context, req *QuerySkuStockByProductSkuIdReq) (res *BaseSkuStock, err error)
}
