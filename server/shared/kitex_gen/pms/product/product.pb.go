// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.3
// source: product.proto

package product

import (
	context "context"
	brand "github.com/yuanyp8/wxcommerce/shared/kitex_gen/pms/brand"
	member_price "github.com/yuanyp8/wxcommerce/shared/kitex_gen/pms/member_price"
	product_attribute "github.com/yuanyp8/wxcommerce/shared/kitex_gen/pms/product_attribute"
	product_attribute_value "github.com/yuanyp8/wxcommerce/shared/kitex_gen/pms/product_attribute_value"
	product_full_reduction "github.com/yuanyp8/wxcommerce/shared/kitex_gen/pms/product_full_reduction"
	product_ladder "github.com/yuanyp8/wxcommerce/shared/kitex_gen/pms/product_ladder"
	sku_stock "github.com/yuanyp8/wxcommerce/shared/kitex_gen/pms/sku_stock"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BaseProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 商品ID
	Id uint64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	// 商品基础信息
	Name      string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`           // 商品名称
	Pic       string `protobuf:"bytes,3,opt,name=Pic,proto3" json:"Pic,omitempty"`             // 商品主图
	ProductSn string `protobuf:"bytes,4,opt,name=ProductSn,proto3" json:"ProductSn,omitempty"` // 商品SN（货号）
	// 类目及品牌关联信息
	BrandId                int64   `protobuf:"varint,5,opt,name=BrandId,proto3" json:"BrandId,omitempty"`                                      // 品牌ID
	BrandName              string  `protobuf:"bytes,6,opt,name=BrandName,proto3" json:"BrandName,omitempty"`                                   // 品牌名称
	ProductCategoryId      int64   `protobuf:"varint,7,opt,name=ProductCategoryId,proto3" json:"ProductCategoryId,omitempty"`                  // 商品类目ID
	ProductCategoryName    string  `protobuf:"bytes,8,opt,name=ProductCategoryName,proto3" json:"ProductCategoryName,omitempty"`               // 商品类目名称
	ProductCategoryIdArray []int64 `protobuf:"varint,9,rep,packed,name=ProductCategoryIdArray,proto3" json:"ProductCategoryIdArray,omitempty"` // 商品类目ID数组
	// 运费模板与产品属性分类
	FreightTemplateId          int64  `protobuf:"varint,10,opt,name=FreightTemplateId,proto3" json:"FreightTemplateId,omitempty"`                   // 商品运费模板id
	ProductAttributeCategoryId int64  `protobuf:"varint,11,opt,name=ProductAttributeCategoryId,proto3" json:"ProductAttributeCategoryId,omitempty"` // 商品属性分类id
	ServiceIDs                 string `protobuf:"bytes,12,opt,name=ServiceIDs,proto3" json:"ServiceIDs,omitempty"`                                  // 以逗号分割的产品服务：1->无忧退货；2->快速退款；3->免费包邮
	// 商品状态
	DeleteStatus    int64 `protobuf:"varint,13,opt,name=DeleteStatus,proto3" json:"DeleteStatus,omitempty"`       // 删除状态（0: 未删除, 1: 已删除）
	PublishStatus   int64 `protobuf:"varint,14,opt,name=PublishStatus,proto3" json:"PublishStatus,omitempty"`     // 发布状态（0: 下架, 1: 上架）
	NewStatus       int64 `protobuf:"varint,15,opt,name=NewStatus,proto3" json:"NewStatus,omitempty"`             // 新品状态（0: 非新品, 1: 新品）
	RecommendStatus int64 `protobuf:"varint,16,opt,name=RecommendStatus,proto3" json:"RecommendStatus,omitempty"` // 推荐状态（0: 不推荐, 1: 推荐）
	VerifyStatus    int64 `protobuf:"varint,17,opt,name=VerifyStatus,proto3" json:"VerifyStatus,omitempty"`       // 审核状态（0: 未审核, 1: 已审核）
	PreviewStatus   int64 `protobuf:"varint,18,opt,name=PreviewStatus,proto3" json:"PreviewStatus,omitempty"`     // 预售状态（0: 非预售, 1: 预售）
	// 销售与库存信息
	Sort           int64   `protobuf:"varint,19,opt,name=Sort,proto3" json:"Sort,omitempty"`                      // 排序值
	Sale           int64   `protobuf:"varint,20,opt,name=Sale,proto3" json:"Sale,omitempty"`                      // 销量
	Price          float64 `protobuf:"fixed64,21,opt,name=Price,proto3" json:"Price,omitempty"`                   // 价格
	PromotionPrice float64 `protobuf:"fixed64,22,opt,name=PromotionPrice,proto3" json:"PromotionPrice,omitempty"` // 促销价格
	Stock          int64   `protobuf:"varint,23,opt,name=Stock,proto3" json:"Stock,omitempty"`                    // 库存数量
	LowStock       int64   `protobuf:"varint,24,opt,name=LowStock,proto3" json:"LowStock,omitempty"`              // 库存预警值
	// 成长积分与促销信息
	GiftGrowth         int64  `protobuf:"varint,25,opt,name=GiftGrowth,proto3" json:"GiftGrowth,omitempty"`                // 购买该商品赠送的成长值
	GiftPoint          int64  `protobuf:"varint,26,opt,name=GiftPoint,proto3" json:"GiftPoint,omitempty"`                  // 购买该商品赠送的积分
	UsePointLimit      int64  `protobuf:"varint,27,opt,name=UsePointLimit,proto3" json:"UsePointLimit,omitempty"`          // 使用积分抵扣的上限
	PromotionStartTime string `protobuf:"bytes,28,opt,name=PromotionStartTime,proto3" json:"PromotionStartTime,omitempty"` // 促销开始时间
	PromotionEndTime   string `protobuf:"bytes,29,opt,name=PromotionEndTime,proto3" json:"PromotionEndTime,omitempty"`     // 促销结束时间
	PromotionPerLimit  int64  `protobuf:"varint,30,opt,name=PromotionPerLimit,proto3" json:"PromotionPerLimit,omitempty"`  // 每人限购数量
	PromotionType      int64  `protobuf:"varint,31,opt,name=PromotionType,proto3" json:"PromotionType,omitempty"`          // 促销类型：0->没有促销使用原价;1->使用促销价；2->使用会员价；3->使用阶梯价格；4->使用满减价格；5->限时购
	// 商品附加信息
	SubTitle      string  `protobuf:"bytes,32,opt,name=SubTitle,proto3" json:"SubTitle,omitempty"`             // 商品副标题
	Description   string  `protobuf:"bytes,33,opt,name=Description,proto3" json:"Description,omitempty"`       // 商品描述
	OriginalPrice float64 `protobuf:"fixed64,34,opt,name=OriginalPrice,proto3" json:"OriginalPrice,omitempty"` // 市场价
	Unit          string  `protobuf:"bytes,35,opt,name=Unit,proto3" json:"Unit,omitempty"`                     // 商品单位
	Weight        float64 `protobuf:"fixed64,36,opt,name=Weight,proto3" json:"Weight,omitempty"`               // 商品重量
	// SEO与附加内容
	Keywords         string `protobuf:"bytes,37,opt,name=Keywords,proto3" json:"Keywords,omitempty"`                 // 商品关键字
	Note             string `protobuf:"bytes,38,opt,name=Note,proto3" json:"Note,omitempty"`                         // 备注
	AlbumPics        string `protobuf:"bytes,39,opt,name=AlbumPics,proto3" json:"AlbumPics,omitempty"`               // 画册图片，连产品图片限制为5张，以逗号分割
	DetailTitle      string `protobuf:"bytes,40,opt,name=DetailTitle,proto3" json:"DetailTitle,omitempty"`           // 详情标题
	DetailDesc       string `protobuf:"bytes,41,opt,name=DetailDesc,proto3" json:"DetailDesc,omitempty"`             // 详情描述
	DetailHtml       string `protobuf:"bytes,42,opt,name=DetailHtml,proto3" json:"DetailHtml,omitempty"`             // 详情内容
	DetailMobileHtml string `protobuf:"bytes,43,opt,name=DetailMobileHtml,proto3" json:"DetailMobileHtml,omitempty"` // 详情手机版内容
}

func (x *BaseProduct) Reset() {
	*x = BaseProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseProduct) ProtoMessage() {}

func (x *BaseProduct) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseProduct.ProtoReflect.Descriptor instead.
func (*BaseProduct) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{0}
}

func (x *BaseProduct) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BaseProduct) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BaseProduct) GetPic() string {
	if x != nil {
		return x.Pic
	}
	return ""
}

func (x *BaseProduct) GetProductSn() string {
	if x != nil {
		return x.ProductSn
	}
	return ""
}

func (x *BaseProduct) GetBrandId() int64 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *BaseProduct) GetBrandName() string {
	if x != nil {
		return x.BrandName
	}
	return ""
}

func (x *BaseProduct) GetProductCategoryId() int64 {
	if x != nil {
		return x.ProductCategoryId
	}
	return 0
}

func (x *BaseProduct) GetProductCategoryName() string {
	if x != nil {
		return x.ProductCategoryName
	}
	return ""
}

func (x *BaseProduct) GetProductCategoryIdArray() []int64 {
	if x != nil {
		return x.ProductCategoryIdArray
	}
	return nil
}

func (x *BaseProduct) GetFreightTemplateId() int64 {
	if x != nil {
		return x.FreightTemplateId
	}
	return 0
}

func (x *BaseProduct) GetProductAttributeCategoryId() int64 {
	if x != nil {
		return x.ProductAttributeCategoryId
	}
	return 0
}

func (x *BaseProduct) GetServiceIDs() string {
	if x != nil {
		return x.ServiceIDs
	}
	return ""
}

func (x *BaseProduct) GetDeleteStatus() int64 {
	if x != nil {
		return x.DeleteStatus
	}
	return 0
}

func (x *BaseProduct) GetPublishStatus() int64 {
	if x != nil {
		return x.PublishStatus
	}
	return 0
}

func (x *BaseProduct) GetNewStatus() int64 {
	if x != nil {
		return x.NewStatus
	}
	return 0
}

func (x *BaseProduct) GetRecommendStatus() int64 {
	if x != nil {
		return x.RecommendStatus
	}
	return 0
}

func (x *BaseProduct) GetVerifyStatus() int64 {
	if x != nil {
		return x.VerifyStatus
	}
	return 0
}

func (x *BaseProduct) GetPreviewStatus() int64 {
	if x != nil {
		return x.PreviewStatus
	}
	return 0
}

func (x *BaseProduct) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *BaseProduct) GetSale() int64 {
	if x != nil {
		return x.Sale
	}
	return 0
}

func (x *BaseProduct) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *BaseProduct) GetPromotionPrice() float64 {
	if x != nil {
		return x.PromotionPrice
	}
	return 0
}

func (x *BaseProduct) GetStock() int64 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *BaseProduct) GetLowStock() int64 {
	if x != nil {
		return x.LowStock
	}
	return 0
}

func (x *BaseProduct) GetGiftGrowth() int64 {
	if x != nil {
		return x.GiftGrowth
	}
	return 0
}

func (x *BaseProduct) GetGiftPoint() int64 {
	if x != nil {
		return x.GiftPoint
	}
	return 0
}

func (x *BaseProduct) GetUsePointLimit() int64 {
	if x != nil {
		return x.UsePointLimit
	}
	return 0
}

func (x *BaseProduct) GetPromotionStartTime() string {
	if x != nil {
		return x.PromotionStartTime
	}
	return ""
}

func (x *BaseProduct) GetPromotionEndTime() string {
	if x != nil {
		return x.PromotionEndTime
	}
	return ""
}

func (x *BaseProduct) GetPromotionPerLimit() int64 {
	if x != nil {
		return x.PromotionPerLimit
	}
	return 0
}

func (x *BaseProduct) GetPromotionType() int64 {
	if x != nil {
		return x.PromotionType
	}
	return 0
}

func (x *BaseProduct) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *BaseProduct) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *BaseProduct) GetOriginalPrice() float64 {
	if x != nil {
		return x.OriginalPrice
	}
	return 0
}

func (x *BaseProduct) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *BaseProduct) GetWeight() float64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *BaseProduct) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *BaseProduct) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *BaseProduct) GetAlbumPics() string {
	if x != nil {
		return x.AlbumPics
	}
	return ""
}

func (x *BaseProduct) GetDetailTitle() string {
	if x != nil {
		return x.DetailTitle
	}
	return ""
}

func (x *BaseProduct) GetDetailDesc() string {
	if x != nil {
		return x.DetailDesc
	}
	return ""
}

func (x *BaseProduct) GetDetailHtml() string {
	if x != nil {
		return x.DetailHtml
	}
	return ""
}

func (x *BaseProduct) GetDetailMobileHtml() string {
	if x != nil {
		return x.DetailMobileHtml
	}
	return ""
}

// MemberPriceList 定义了会员价格列表的信息
type MemberPriceList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberLevelId   int64   `protobuf:"varint,1,opt,name=MemberLevelId,proto3" json:"MemberLevelId,omitempty"`    // 会员等级ID
	MemberPrice     float32 `protobuf:"fixed32,2,opt,name=MemberPrice,proto3" json:"MemberPrice,omitempty"`       // 会员价格
	MemberLevelName string  `protobuf:"bytes,3,opt,name=MemberLevelName,proto3" json:"MemberLevelName,omitempty"` // 会员等级名称
}

func (x *MemberPriceList) Reset() {
	*x = MemberPriceList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberPriceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberPriceList) ProtoMessage() {}

func (x *MemberPriceList) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberPriceList.ProtoReflect.Descriptor instead.
func (*MemberPriceList) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{1}
}

func (x *MemberPriceList) GetMemberLevelId() int64 {
	if x != nil {
		return x.MemberLevelId
	}
	return 0
}

func (x *MemberPriceList) GetMemberPrice() float32 {
	if x != nil {
		return x.MemberPrice
	}
	return 0
}

func (x *MemberPriceList) GetMemberLevelName() string {
	if x != nil {
		return x.MemberLevelName
	}
	return ""
}

// ProductAttributeValueList 定义了产品属性值列表的信息
type ProductAttributeValueList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductAttributeId int64  `protobuf:"varint,1,opt,name=ProductAttributeId,proto3" json:"ProductAttributeId,omitempty"` // 产品属性ID
	AttributeValues    string `protobuf:"bytes,2,opt,name=AttributeValues,proto3" json:"AttributeValues,omitempty"`        // 属性值
}

func (x *ProductAttributeValueList) Reset() {
	*x = ProductAttributeValueList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAttributeValueList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttributeValueList) ProtoMessage() {}

func (x *ProductAttributeValueList) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttributeValueList.ProtoReflect.Descriptor instead.
func (*ProductAttributeValueList) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{2}
}

func (x *ProductAttributeValueList) GetProductAttributeId() int64 {
	if x != nil {
		return x.ProductAttributeId
	}
	return 0
}

func (x *ProductAttributeValueList) GetAttributeValues() string {
	if x != nil {
		return x.AttributeValues
	}
	return ""
}

// ProductFullReductionList 定义了商品满减信息
type ProductFullReductionList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FullPrice   float32 `protobuf:"fixed32,1,opt,name=FullPrice,proto3" json:"FullPrice,omitempty"`     // 满减条件的原价
	ReducePrice float32 `protobuf:"fixed32,2,opt,name=ReducePrice,proto3" json:"ReducePrice,omitempty"` // 满减后的优惠价格
}

func (x *ProductFullReductionList) Reset() {
	*x = ProductFullReductionList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductFullReductionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductFullReductionList) ProtoMessage() {}

func (x *ProductFullReductionList) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductFullReductionList.ProtoReflect.Descriptor instead.
func (*ProductFullReductionList) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{3}
}

func (x *ProductFullReductionList) GetFullPrice() float32 {
	if x != nil {
		return x.FullPrice
	}
	return 0
}

func (x *ProductFullReductionList) GetReducePrice() float32 {
	if x != nil {
		return x.ReducePrice
	}
	return 0
}

// ProductLadderList 定义了商品阶梯价格信息
type ProductLadderList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count    int64   `protobuf:"varint,2,opt,name=Count,proto3" json:"Count,omitempty"`        // 阶梯数量
	Discount float32 `protobuf:"fixed32,3,opt,name=Discount,proto3" json:"Discount,omitempty"` // 折扣率
	Price    float32 `protobuf:"fixed32,4,opt,name=Price,proto3" json:"Price,omitempty"`       // 价格
}

func (x *ProductLadderList) Reset() {
	*x = ProductLadderList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductLadderList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductLadderList) ProtoMessage() {}

func (x *ProductLadderList) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductLadderList.ProtoReflect.Descriptor instead.
func (*ProductLadderList) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{4}
}

func (x *ProductLadderList) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ProductLadderList) GetDiscount() float32 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *ProductLadderList) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

// SkuStockList 定义了SKU库存列表的信息
type SkuStockList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuCode        string  `protobuf:"bytes,1,opt,name=SkuCode,proto3" json:"SkuCode,omitempty"`                 // SKU编码
	Price          float32 `protobuf:"fixed32,2,opt,name=Price,proto3" json:"Price,omitempty"`                   // 价格
	Stock          int64   `protobuf:"varint,3,opt,name=Stock,proto3" json:"Stock,omitempty"`                    // 库存数量
	LowStock       int64   `protobuf:"varint,4,opt,name=LowStock,proto3" json:"LowStock,omitempty"`              // 低库存数量
	Pic            string  `protobuf:"bytes,5,opt,name=Pic,proto3" json:"Pic,omitempty"`                         // 图片链接
	Sale           int64   `protobuf:"varint,6,opt,name=Sale,proto3" json:"Sale,omitempty"`                      // 销售数量
	PromotionPrice float32 `protobuf:"fixed32,7,opt,name=PromotionPrice,proto3" json:"PromotionPrice,omitempty"` // 促销价格
	LockStock      int64   `protobuf:"varint,8,opt,name=LockStock,proto3" json:"LockStock,omitempty"`            // 锁定库存
	SpData         string  `protobuf:"bytes,9,opt,name=SpData,proto3" json:"SpData,omitempty"`                   // 额外属性数据
}

func (x *SkuStockList) Reset() {
	*x = SkuStockList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkuStockList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuStockList) ProtoMessage() {}

func (x *SkuStockList) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuStockList.ProtoReflect.Descriptor instead.
func (*SkuStockList) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{5}
}

func (x *SkuStockList) GetSkuCode() string {
	if x != nil {
		return x.SkuCode
	}
	return ""
}

func (x *SkuStockList) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SkuStockList) GetStock() int64 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *SkuStockList) GetLowStock() int64 {
	if x != nil {
		return x.LowStock
	}
	return 0
}

func (x *SkuStockList) GetPic() string {
	if x != nil {
		return x.Pic
	}
	return ""
}

func (x *SkuStockList) GetSale() int64 {
	if x != nil {
		return x.Sale
	}
	return 0
}

func (x *SkuStockList) GetPromotionPrice() float32 {
	if x != nil {
		return x.PromotionPrice
	}
	return 0
}

func (x *SkuStockList) GetLockStock() int64 {
	if x != nil {
		return x.LockStock
	}
	return 0
}

func (x *SkuStockList) GetSpData() string {
	if x != nil {
		return x.SpData
	}
	return ""
}

// ProductAddReq 定义了添加商品请求的数据结构
type ProductAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Product                   *BaseProduct                 `protobuf:"bytes,1,opt,name=Product,proto3" json:"Product,omitempty"`
	MemberPriceList           []*MemberPriceList           `protobuf:"bytes,2,rep,name=MemberPriceList,proto3" json:"MemberPriceList,omitempty"`                     // MemberPriceList 会员价格列表
	ProductAttributeValueList []*ProductAttributeValueList `protobuf:"bytes,3,rep,name=ProductAttributeValueList,proto3" json:"ProductAttributeValueList,omitempty"` // ProductAttributeValueList 商品属性值列表
	ProductFullReductionList  []*ProductFullReductionList  `protobuf:"bytes,4,rep,name=ProductFullReductionList,proto3" json:"ProductFullReductionList,omitempty"`   // ProductFullReductionList 满减信息列表
	ProductLadderList         []*ProductLadderList         `protobuf:"bytes,5,rep,name=ProductLadderList,proto3" json:"ProductLadderList,omitempty"`                 // ProductLadderList 满件优惠列表
	SkuStockList              []*SkuStockList              `protobuf:"bytes,6,rep,name=SkuStockList,proto3" json:"SkuStockList,omitempty"`                           // SkuStockList SKU库存列表
}

func (x *ProductAddReq) Reset() {
	*x = ProductAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAddReq) ProtoMessage() {}

func (x *ProductAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAddReq.ProtoReflect.Descriptor instead.
func (*ProductAddReq) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{6}
}

func (x *ProductAddReq) GetProduct() *BaseProduct {
	if x != nil {
		return x.Product
	}
	return nil
}

func (x *ProductAddReq) GetMemberPriceList() []*MemberPriceList {
	if x != nil {
		return x.MemberPriceList
	}
	return nil
}

func (x *ProductAddReq) GetProductAttributeValueList() []*ProductAttributeValueList {
	if x != nil {
		return x.ProductAttributeValueList
	}
	return nil
}

func (x *ProductAddReq) GetProductFullReductionList() []*ProductFullReductionList {
	if x != nil {
		return x.ProductFullReductionList
	}
	return nil
}

func (x *ProductAddReq) GetProductLadderList() []*ProductLadderList {
	if x != nil {
		return x.ProductLadderList
	}
	return nil
}

func (x *ProductAddReq) GetSkuStockList() []*SkuStockList {
	if x != nil {
		return x.SkuStockList
	}
	return nil
}

type ProductAddResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId uint64 `protobuf:"varint,1,opt,name=ProductId,proto3" json:"ProductId,omitempty"`
}

func (x *ProductAddResp) Reset() {
	*x = ProductAddResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductAddResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAddResp) ProtoMessage() {}

func (x *ProductAddResp) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAddResp.ProtoReflect.Descriptor instead.
func (*ProductAddResp) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{7}
}

func (x *ProductAddResp) GetProductId() uint64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

type ProductListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current           int64  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`                     // 当前页码
	PageSize          int64  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`                   // 每页的产品数量
	Name              string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`                            // 产品名称
	VerifyStatus      int64  `protobuf:"varint,4,opt,name=VerifyStatus,proto3" json:"VerifyStatus,omitempty"`           // 核验状态，用于筛选已核验或未核验的产品
	ProductCategoryId int64  `protobuf:"varint,5,opt,name=ProductCategoryId,proto3" json:"ProductCategoryId,omitempty"` // 产品分类ID，用于按产品分类筛选产品
	PublishStatus     int64  `protobuf:"varint,6,opt,name=PublishStatus,proto3" json:"PublishStatus,omitempty"`         // 发布状态，用于筛选已发布或未发布的產品
	DeleteStatus      int64  `protobuf:"varint,7,opt,name=DeleteStatus,proto3" json:"DeleteStatus,omitempty"`           // 删除状态，用于筛选已删除或未删除的产品
	BrandId           int64  `protobuf:"varint,8,opt,name=BrandId,proto3" json:"BrandId,omitempty"`                     // 品牌ID，用于按品牌筛选产品
}

func (x *ProductListReq) Reset() {
	*x = ProductListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductListReq) ProtoMessage() {}

func (x *ProductListReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductListReq.ProtoReflect.Descriptor instead.
func (*ProductListReq) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{8}
}

func (x *ProductListReq) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ProductListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ProductListReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductListReq) GetVerifyStatus() int64 {
	if x != nil {
		return x.VerifyStatus
	}
	return 0
}

func (x *ProductListReq) GetProductCategoryId() int64 {
	if x != nil {
		return x.ProductCategoryId
	}
	return 0
}

func (x *ProductListReq) GetPublishStatus() int64 {
	if x != nil {
		return x.PublishStatus
	}
	return 0
}

func (x *ProductListReq) GetDeleteStatus() int64 {
	if x != nil {
		return x.DeleteStatus
	}
	return 0
}

func (x *ProductListReq) GetBrandId() int64 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

type ProductByIdsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []uint64 `protobuf:"varint,1,rep,packed,name=Ids,proto3" json:"Ids,omitempty"`
}

func (x *ProductByIdsReq) Reset() {
	*x = ProductByIdsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductByIdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductByIdsReq) ProtoMessage() {}

func (x *ProductByIdsReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductByIdsReq.ProtoReflect.Descriptor instead.
func (*ProductByIdsReq) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{9}
}

func (x *ProductByIdsReq) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type ProductListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64          `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*BaseProduct `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ProductListResp) Reset() {
	*x = ProductListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductListResp) ProtoMessage() {}

func (x *ProductListResp) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductListResp.ProtoReflect.Descriptor instead.
func (*ProductListResp) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{10}
}

func (x *ProductListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ProductListResp) GetList() []*BaseProduct {
	if x != nil {
		return x.List
	}
	return nil
}

// ProductUpdateReq 产品更新请求消息
// 该消息用于传递更新产品信息的请求参数
type ProductUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Product                   *BaseProduct                 `protobuf:"bytes,1,opt,name=Product,proto3" json:"Product,omitempty"`
	MemberPriceList           []*MemberPriceList           `protobuf:"bytes,2,rep,name=MemberPriceList,proto3" json:"MemberPriceList,omitempty"`                     // 会员价格列表
	ProductAttributeValueList []*ProductAttributeValueList `protobuf:"bytes,3,rep,name=ProductAttributeValueList,proto3" json:"ProductAttributeValueList,omitempty"` // 产品属性值列表
	ProductFullReductionList  []*ProductFullReductionList  `protobuf:"bytes,4,rep,name=ProductFullReductionList,proto3" json:"ProductFullReductionList,omitempty"`   // 满减信息列表
	ProductLadderList         []*ProductLadderList         `protobuf:"bytes,5,rep,name=ProductLadderList,proto3" json:"ProductLadderList,omitempty"`                 // 满件优惠列表
	SkuStockList              []*SkuStockList              `protobuf:"bytes,6,rep,name=SkuStockList,proto3" json:"SkuStockList,omitempty"`                           // SKU库存列表
}

func (x *ProductUpdateReq) Reset() {
	*x = ProductUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductUpdateReq) ProtoMessage() {}

func (x *ProductUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductUpdateReq.ProtoReflect.Descriptor instead.
func (*ProductUpdateReq) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{11}
}

func (x *ProductUpdateReq) GetProduct() *BaseProduct {
	if x != nil {
		return x.Product
	}
	return nil
}

func (x *ProductUpdateReq) GetMemberPriceList() []*MemberPriceList {
	if x != nil {
		return x.MemberPriceList
	}
	return nil
}

func (x *ProductUpdateReq) GetProductAttributeValueList() []*ProductAttributeValueList {
	if x != nil {
		return x.ProductAttributeValueList
	}
	return nil
}

func (x *ProductUpdateReq) GetProductFullReductionList() []*ProductFullReductionList {
	if x != nil {
		return x.ProductFullReductionList
	}
	return nil
}

func (x *ProductUpdateReq) GetProductLadderList() []*ProductLadderList {
	if x != nil {
		return x.ProductLadderList
	}
	return nil
}

func (x *ProductUpdateReq) GetSkuStockList() []*SkuStockList {
	if x != nil {
		return x.SkuStockList
	}
	return nil
}

type ProductUpdateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *ProductUpdateResp) Reset() {
	*x = ProductUpdateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductUpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductUpdateResp) ProtoMessage() {}

func (x *ProductUpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductUpdateResp.ProtoReflect.Descriptor instead.
func (*ProductUpdateResp) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{12}
}

func (x *ProductUpdateResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type ProductDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *ProductDeleteReq) Reset() {
	*x = ProductDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductDeleteReq) ProtoMessage() {}

func (x *ProductDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductDeleteReq.ProtoReflect.Descriptor instead.
func (*ProductDeleteReq) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{13}
}

func (x *ProductDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type ProductDeleteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *ProductDeleteResp) Reset() {
	*x = ProductDeleteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductDeleteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductDeleteResp) ProtoMessage() {}

func (x *ProductDeleteResp) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductDeleteResp.ProtoReflect.Descriptor instead.
func (*ProductDeleteResp) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{14}
}

func (x *ProductDeleteResp) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

type ProductDetailByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"` // 产品id
}

func (x *ProductDetailByIdReq) Reset() {
	*x = ProductDetailByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductDetailByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductDetailByIdReq) ProtoMessage() {}

func (x *ProductDetailByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductDetailByIdReq.ProtoReflect.Descriptor instead.
func (*ProductDetailByIdReq) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{15}
}

func (x *ProductDetailByIdReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ProductDetailByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Product                   *BaseProduct                                         `protobuf:"bytes,1,opt,name=Product,proto3" json:"Product,omitempty"`
	Brand                     *brand.BaseBrand                                     `protobuf:"bytes,2,opt,name=Brand,proto3" json:"Brand,omitempty"`
	ProductAttributeList      []*product_attribute.BaseProductAttribute            `protobuf:"bytes,3,rep,name=ProductAttributeList,proto3" json:"ProductAttributeList,omitempty"`
	ProductAttributeValueList []*product_attribute_value.BaseProductAttributeValue `protobuf:"bytes,4,rep,name=ProductAttributeValueList,proto3" json:"ProductAttributeValueList,omitempty"`
	SkuStockList              []*sku_stock.BaseSkuStock                            `protobuf:"bytes,5,rep,name=SkuStockList,proto3" json:"SkuStockList,omitempty"`
	ProductLadderList         []*product_ladder.BaseProductLadder                  `protobuf:"bytes,6,rep,name=ProductLadderList,proto3" json:"ProductLadderList,omitempty"`
	ProductFullReductionList  []*product_full_reduction.BaseProductFullReduction   `protobuf:"bytes,7,rep,name=ProductFullReductionList,proto3" json:"ProductFullReductionList,omitempty"`
	MemberPriceList           []*member_price.BaseMemberPrice                      `protobuf:"bytes,8,rep,name=MemberPriceList,proto3" json:"MemberPriceList,omitempty"`
}

func (x *ProductDetailByIdResp) Reset() {
	*x = ProductDetailByIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_product_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductDetailByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductDetailByIdResp) ProtoMessage() {}

func (x *ProductDetailByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_product_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductDetailByIdResp.ProtoReflect.Descriptor instead.
func (*ProductDetailByIdResp) Descriptor() ([]byte, []int) {
	return file_product_proto_rawDescGZIP(), []int{16}
}

func (x *ProductDetailByIdResp) GetProduct() *BaseProduct {
	if x != nil {
		return x.Product
	}
	return nil
}

func (x *ProductDetailByIdResp) GetBrand() *brand.BaseBrand {
	if x != nil {
		return x.Brand
	}
	return nil
}

func (x *ProductDetailByIdResp) GetProductAttributeList() []*product_attribute.BaseProductAttribute {
	if x != nil {
		return x.ProductAttributeList
	}
	return nil
}

func (x *ProductDetailByIdResp) GetProductAttributeValueList() []*product_attribute_value.BaseProductAttributeValue {
	if x != nil {
		return x.ProductAttributeValueList
	}
	return nil
}

func (x *ProductDetailByIdResp) GetSkuStockList() []*sku_stock.BaseSkuStock {
	if x != nil {
		return x.SkuStockList
	}
	return nil
}

func (x *ProductDetailByIdResp) GetProductLadderList() []*product_ladder.BaseProductLadder {
	if x != nil {
		return x.ProductLadderList
	}
	return nil
}

func (x *ProductDetailByIdResp) GetProductFullReductionList() []*product_full_reduction.BaseProductFullReduction {
	if x != nil {
		return x.ProductFullReductionList
	}
	return nil
}

func (x *ProductDetailByIdResp) GetMemberPriceList() []*member_price.BaseMemberPrice {
	if x != nil {
		return x.MemberPriceList
	}
	return nil
}

var File_product_proto protoreflect.FileDescriptor

var file_product_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x03, 0x70, 0x6d, 0x73, 0x1a, 0x0b, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x17, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x73, 0x6b, 0x75, 0x5f, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x6c, 0x61, 0x64, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x72,
	0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xb3, 0x0b, 0x0a, 0x0b, 0x42, 0x61, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x69, 0x63, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x50, 0x69, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x53, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x53, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c,
	0x0a, 0x11, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x13,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x36,
	0x0a, 0x16, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x41, 0x72, 0x72, 0x61, 0x79, 0x18, 0x09, 0x20, 0x03, 0x28, 0x03, 0x52, 0x16,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x2c, 0x0a, 0x11, 0x46, 0x72, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x11, 0x46, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x1a, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1a, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x44, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x44, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x4e, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x4e, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x0f,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x53, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x61, 0x6c, 0x65, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x53, 0x61, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08,
	0x4c, 0x6f, 0x77, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x4c, 0x6f, 0x77, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x47, 0x69, 0x66, 0x74,
	0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x47, 0x69,
	0x66, 0x74, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x47, 0x69, 0x66, 0x74,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x47, 0x69, 0x66,
	0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x55,
	0x73, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2e, 0x0a, 0x12,
	0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10,
	0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x11, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65,
	0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x53, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x53, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x4f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0d, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x55, 0x6e, 0x69, 0x74, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x55, 0x6e, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x24,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x6f, 0x74, 0x65,
	0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x41, 0x6c, 0x62, 0x75, 0x6d, 0x50, 0x69, 0x63, 0x73, 0x18, 0x27, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x50, 0x69, 0x63, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x65, 0x73, 0x63, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1e, 0x0a, 0x0a,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x74, 0x6d, 0x6c, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x2a, 0x0a, 0x10,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x48, 0x74, 0x6d, 0x6c,
	0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x48, 0x74, 0x6d, 0x6c, 0x22, 0x83, 0x01, 0x0a, 0x0f, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x75,
	0x0a, 0x19, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x5a, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x46, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x75, 0x6c, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x46, 0x75, 0x6c, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x22, 0x5b, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x61, 0x64, 0x64,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0xf4,
	0x01, 0x0a, 0x0c, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x53, 0x6b, 0x75, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x53, 0x6b, 0x75, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x6f, 0x77, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4c, 0x6f, 0x77, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x50, 0x69, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x61, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x53, 0x61, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x70, 0x44, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53,
	0x70, 0x44, 0x61, 0x74, 0x61, 0x22, 0xb1, 0x03, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x12, 0x2a, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x07, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x12, 0x3e, 0x0a, 0x0f, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70,
	0x6d, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x0f, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x5c, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x19, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x59, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x46, 0x75, 0x6c, 0x6c,
	0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x46, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x18, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x46, 0x75, 0x6c, 0x6c, 0x52,
	0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x11,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x61, 0x64, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x61, 0x64, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x11, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x61, 0x64, 0x64, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x35, 0x0a, 0x0c, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x53,
	0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0c, 0x53, 0x6b, 0x75,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x2e, 0x0a, 0x0e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0x90, 0x02, 0x0a, 0x0e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22,
	0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x22, 0x23, 0x0a, 0x0f,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x10, 0x0a, 0x03, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x03, 0x49, 0x64,
	0x73, 0x22, 0x4d, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x24, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0xb4, 0x03, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2a, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x07, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x12, 0x3e, 0x0a, 0x0f, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x6d, 0x73,
	0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x0f, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x5c, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x19, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x59, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x46, 0x75, 0x6c, 0x6c, 0x52, 0x65,
	0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x46,
	0x75, 0x6c, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x18, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x46, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x11, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x61, 0x64, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4c, 0x61, 0x64, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x11, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x61, 0x64, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x35, 0x0a, 0x0c, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x53, 0x6b, 0x75,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0c, 0x53, 0x6b, 0x75, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x27, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67,
	0x22, 0x24, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x27, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22,
	0x26, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x49, 0x64, 0x22, 0xae, 0x04, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x2a, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x07, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x24, 0x0a,
	0x05, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70,
	0x6d, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x05, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x12, 0x4d, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x14, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x5c, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x19, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x35, 0x0a, 0x0c, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x53, 0x6b, 0x75, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x0c, 0x53, 0x6b, 0x75, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4c, 0x61, 0x64, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x4c, 0x61, 0x64, 0x64, 0x65, 0x72, 0x52, 0x11, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4c, 0x61, 0x64, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x59, 0x0a,
	0x18, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x46, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x46, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x18,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x46, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x64, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x0f, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x0f, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x32, 0x8d, 0x03, 0x0a, 0x0e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x64, 0x64, 0x12, 0x12, 0x2e, 0x70, 0x6d, 0x73, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e,
	0x70, 0x6d, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x38, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x13, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x10,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x49, 0x64, 0x73,
	0x12, 0x14, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x79,
	0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x0d,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x15, 0x2e,
	0x70, 0x6d, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x0d,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x15, 0x2e,
	0x70, 0x6d, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x11,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x49,
	0x64, 0x12, 0x19, 0x2e, 0x70, 0x6d, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70,
	0x6d, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x75, 0x61, 0x6e, 0x79, 0x70, 0x38, 0x2f, 0x77,
	0x78, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63, 0x65, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x2f, 0x6b, 0x69, 0x74, 0x65, 0x78, 0x5f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x6d, 0x73, 0x2f, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_product_proto_rawDescOnce sync.Once
	file_product_proto_rawDescData = file_product_proto_rawDesc
)

func file_product_proto_rawDescGZIP() []byte {
	file_product_proto_rawDescOnce.Do(func() {
		file_product_proto_rawDescData = protoimpl.X.CompressGZIP(file_product_proto_rawDescData)
	})
	return file_product_proto_rawDescData
}

var file_product_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_product_proto_goTypes = []interface{}{
	(*BaseProduct)(nil),                                       // 0: pms.BaseProduct
	(*MemberPriceList)(nil),                                   // 1: pms.MemberPriceList
	(*ProductAttributeValueList)(nil),                         // 2: pms.ProductAttributeValueList
	(*ProductFullReductionList)(nil),                          // 3: pms.ProductFullReductionList
	(*ProductLadderList)(nil),                                 // 4: pms.ProductLadderList
	(*SkuStockList)(nil),                                      // 5: pms.SkuStockList
	(*ProductAddReq)(nil),                                     // 6: pms.ProductAddReq
	(*ProductAddResp)(nil),                                    // 7: pms.ProductAddResp
	(*ProductListReq)(nil),                                    // 8: pms.ProductListReq
	(*ProductByIdsReq)(nil),                                   // 9: pms.ProductByIdsReq
	(*ProductListResp)(nil),                                   // 10: pms.ProductListResp
	(*ProductUpdateReq)(nil),                                  // 11: pms.ProductUpdateReq
	(*ProductUpdateResp)(nil),                                 // 12: pms.ProductUpdateResp
	(*ProductDeleteReq)(nil),                                  // 13: pms.ProductDeleteReq
	(*ProductDeleteResp)(nil),                                 // 14: pms.ProductDeleteResp
	(*ProductDetailByIdReq)(nil),                              // 15: pms.ProductDetailByIdReq
	(*ProductDetailByIdResp)(nil),                             // 16: pms.ProductDetailByIdResp
	(*brand.BaseBrand)(nil),                                   // 17: pms.BaseBrand
	(*product_attribute.BaseProductAttribute)(nil),            // 18: pms.BaseProductAttribute
	(*product_attribute_value.BaseProductAttributeValue)(nil), // 19: pms.BaseProductAttributeValue
	(*sku_stock.BaseSkuStock)(nil),                            // 20: pms.BaseSkuStock
	(*product_ladder.BaseProductLadder)(nil),                  // 21: pms.BaseProductLadder
	(*product_full_reduction.BaseProductFullReduction)(nil),   // 22: pms.BaseProductFullReduction
	(*member_price.BaseMemberPrice)(nil),                      // 23: pms.BaseMemberPrice
}
var file_product_proto_depIdxs = []int32{
	0,  // 0: pms.ProductAddReq.Product:type_name -> pms.BaseProduct
	1,  // 1: pms.ProductAddReq.MemberPriceList:type_name -> pms.MemberPriceList
	2,  // 2: pms.ProductAddReq.ProductAttributeValueList:type_name -> pms.ProductAttributeValueList
	3,  // 3: pms.ProductAddReq.ProductFullReductionList:type_name -> pms.ProductFullReductionList
	4,  // 4: pms.ProductAddReq.ProductLadderList:type_name -> pms.ProductLadderList
	5,  // 5: pms.ProductAddReq.SkuStockList:type_name -> pms.SkuStockList
	0,  // 6: pms.ProductListResp.list:type_name -> pms.BaseProduct
	0,  // 7: pms.ProductUpdateReq.Product:type_name -> pms.BaseProduct
	1,  // 8: pms.ProductUpdateReq.MemberPriceList:type_name -> pms.MemberPriceList
	2,  // 9: pms.ProductUpdateReq.ProductAttributeValueList:type_name -> pms.ProductAttributeValueList
	3,  // 10: pms.ProductUpdateReq.ProductFullReductionList:type_name -> pms.ProductFullReductionList
	4,  // 11: pms.ProductUpdateReq.ProductLadderList:type_name -> pms.ProductLadderList
	5,  // 12: pms.ProductUpdateReq.SkuStockList:type_name -> pms.SkuStockList
	0,  // 13: pms.ProductDetailByIdResp.Product:type_name -> pms.BaseProduct
	17, // 14: pms.ProductDetailByIdResp.Brand:type_name -> pms.BaseBrand
	18, // 15: pms.ProductDetailByIdResp.ProductAttributeList:type_name -> pms.BaseProductAttribute
	19, // 16: pms.ProductDetailByIdResp.ProductAttributeValueList:type_name -> pms.BaseProductAttributeValue
	20, // 17: pms.ProductDetailByIdResp.SkuStockList:type_name -> pms.BaseSkuStock
	21, // 18: pms.ProductDetailByIdResp.ProductLadderList:type_name -> pms.BaseProductLadder
	22, // 19: pms.ProductDetailByIdResp.ProductFullReductionList:type_name -> pms.BaseProductFullReduction
	23, // 20: pms.ProductDetailByIdResp.MemberPriceList:type_name -> pms.BaseMemberPrice
	6,  // 21: pms.ProductService.ProductAdd:input_type -> pms.ProductAddReq
	8,  // 22: pms.ProductService.ProductList:input_type -> pms.ProductListReq
	9,  // 23: pms.ProductService.ProductListByIds:input_type -> pms.ProductByIdsReq
	11, // 24: pms.ProductService.ProductUpdate:input_type -> pms.ProductUpdateReq
	13, // 25: pms.ProductService.ProductDelete:input_type -> pms.ProductDeleteReq
	15, // 26: pms.ProductService.ProductDetailById:input_type -> pms.ProductDetailByIdReq
	7,  // 27: pms.ProductService.ProductAdd:output_type -> pms.ProductAddResp
	10, // 28: pms.ProductService.ProductList:output_type -> pms.ProductListResp
	10, // 29: pms.ProductService.ProductListByIds:output_type -> pms.ProductListResp
	12, // 30: pms.ProductService.ProductUpdate:output_type -> pms.ProductUpdateResp
	14, // 31: pms.ProductService.ProductDelete:output_type -> pms.ProductDeleteResp
	16, // 32: pms.ProductService.ProductDetailById:output_type -> pms.ProductDetailByIdResp
	27, // [27:33] is the sub-list for method output_type
	21, // [21:27] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_product_proto_init() }
func file_product_proto_init() {
	if File_product_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_product_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberPriceList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAttributeValueList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductFullReductionList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductLadderList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkuStockList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductAddResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductByIdsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductUpdateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductDeleteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductDetailByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_product_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductDetailByIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_product_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_product_proto_goTypes,
		DependencyIndexes: file_product_proto_depIdxs,
		MessageInfos:      file_product_proto_msgTypes,
	}.Build()
	File_product_proto = out.File
	file_product_proto_rawDesc = nil
	file_product_proto_goTypes = nil
	file_product_proto_depIdxs = nil
}

var _ context.Context

// Code generated by Kitex v0.9.0. DO NOT EDIT.

type ProductService interface {
	ProductAdd(ctx context.Context, req *ProductAddReq) (res *ProductAddResp, err error)
	ProductList(ctx context.Context, req *ProductListReq) (res *ProductListResp, err error)
	ProductListByIds(ctx context.Context, req *ProductByIdsReq) (res *ProductListResp, err error)
	ProductUpdate(ctx context.Context, req *ProductUpdateReq) (res *ProductUpdateResp, err error)
	ProductDelete(ctx context.Context, req *ProductDeleteReq) (res *ProductDeleteResp, err error)
	ProductDetailById(ctx context.Context, req *ProductDetailByIdReq) (res *ProductDetailByIdResp, err error)
}
